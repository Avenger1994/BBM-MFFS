buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'maven-publish'

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"

if (System.getenv("TEAMCITY_BUILDCONF_NAME").equalsIgnoreCase("Production")) {
    group = "com.calclavia.mffs"
    archivesBaseName = System.getenv("TEAMCITY_PROJECT_NAME")
} else {
    group = "dev.calclavia.mffs"
    archivesBaseName = System.getenv("TEAMCITY_PROJECT_NAME") + "-" + System.getenv("TEAMCITY_BUILDCONF_NAME")
}

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
	
	replaceIn "ModularForceFieldSystem.java"
	replace "@MAJOR@", config.version.mod.major
	replace "@MINOR@", config.version.mod.minor
	replace "@REVIS@", config.version.mod.revis

	if (System.getenv("BUILD_NUMBER") != null) {
		replace "@BUILD@", System.getenv("BUILD_NUMBER")
	}
	else {
		replace "@BUILD@", 1
	}

    replaceIn "mcmod.info"
    replace "@MAJOR@", config.version.mod.major
    replace "@MINOR@", config.version.mod.minor
    replace "@REVIS@", config.version.mod.revis
}

if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"

processResources {
	from 'build.properties'
}

task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}


/**
 * Generates a TeamCity XML changelog via the REST API.
 */
task("createChangelog").doLast {

    def teamCityURL = "http://ci.calclavia.com/"

    /**
     * Create a new file
     */
    def file = new FileOutputStream("output/changelog.xml")
    def out = new BufferedOutputStream(file)

    /**
     * Grab the build first, parse the XML to find the changelog XML URL
     */
    def changesXML = new XmlSlurper().parse(teamCityURL + "guestAuth/app/rest/changes?locator=build:(id:" + teamcity["teamcity.build.id"] + ")")
    def changes = changesXML.change

    /**
     * Add the XML definition header in the front of the file and remove all other occurrences of the XML header
     */
    out << ("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><changes>")

    println("createChangelog: Identified " + changes.size() + " changes to be written into the changelog.")

    for (int i = 0; i < changes.size(); i++) {
        /**
         * Write each changelog XML into the URL
         */
        def changelogURL = teamCityURL + "guestAuth/app/rest/changes/id:" + changes[i].@id.text()
        out << new URL(changelogURL).getText().replaceAll("<\\?xml version=\"1\\.0\" encoding=\"UTF-8\" standalone=\"yes\"\\?>", "")
    }

    out << "</changes>"

    out.close()
}

jar {
    dependsOn copyBuildXml, createChangelog
    classifier = 'core'
    destinationDir = file 'output'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar

            artifact("output/changelog.xml") {
                classifier "changelog"
                extension "xml"
            }

            artifact("output/build.properties") {
                classifier "build"
                extension "properties"
            }
        }		
    }
    repositories {
        maven {
            url "file://var/www/maven"
        }
    }
}

repositories {
	maven {
		name 'Calclavia Maven'
		url 'http://calclavia.com/maven'
	}
	maven {
		name = "forge"
		url = "http://files.minecraftforge.net/maven"
	}
	ivy {
		name 'FMP'
		artifactPattern "http://files.minecraftforge.net/[module]/[module]-dev-[revision].[ext]"
	}
	ivy {
		artifactPattern "http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.6.4/[module]-dev%20[revision].[ext]"
	}
	mavenCentral()
}

dependencies {
    compile group: 'dev.calclavia.universalelectricity', name: 'universal-electricity', version: "${config.version.universalelectricity}", classifier: "dev"
	compile group: 'dev.calclavia.resonantengine', name: 'resonant-engine', version: "${config.version.resonantengine}", classifier: "dev"
}